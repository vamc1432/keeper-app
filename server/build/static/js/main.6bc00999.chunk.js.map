{"version":3,"sources":["components/Header.jsx","components/Editnote.jsx","components/Note.jsx","components/Footer.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","Editnote","props","React","useState","title","Etitle","content","Econtent","enote","setenote","handleEChange","e","target","name","value","prev","className","onChange","placeholder","autoComplete","rows","onClick","edit","Eid","preventDefault","Note","editclicked","seteditclicked","Edtitle","NoteTitle","Edcontent","NoteMessage","editedNote","setEditedNote","id","newEnote","EditId","requestOptions","method","headers","body","JSON","stringify","fetch","then","res","json","jsondata","del","console","log","Footer","year","Date","getFullYear","CreateArea","ipnote","setipnote","taclick","settaclick","handleChange","action","Zoom","in","Fab","add","App","notes","setnotes","deleteNote","useEffect","catch","error","newNote","map","i","index","key","Ntitle","_id","Ncontent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6bc00999.chunk.js","sourcesContent":["import React from \"react\";\nimport EventNoteSharpIcon from '@material-ui/icons/EventNoteSharp';\n\nfunction Header() {\n  return (\n    <header>\n      <h1><EventNoteSharpIcon /> Keeper</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport DoneIcon from '@material-ui/icons/Done';\n\nfunction Editnote(props) {\n    const [enote, setenote] = React.useState({\n        title: props.Etitle,\n        content: props.Econtent\n    });\n    function handleEChange(e) {\n        const { name, value } = e.target;\n        setenote((prev) => {\n          return {\n            ...prev,\n            [name]: value,\n          };\n        });\n      }\n  return (\n    <div>\n    <form className=\"create-note edit-note\">\n      <input\n        onChange={handleEChange}\n        name=\"title\"\n        value={enote.title}\n        placeholder=\"Title\"\n        autoComplete=\"off\"\n      />\n      <textarea\n        onChange={handleEChange}\n        name=\"content\"\n        value={enote.content}\n        placeholder=\"Take a note...\"\n        rows=\"2\"\n      />\n      <button onClick={(e)=>{\n          props.edit(enote,props.Eid);\n          e.preventDefault();\n      }}>\n          <DoneIcon />\n      </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Editnote;\n","import React, { useState } from \"react\";\nimport Editnote from \"./Editnote\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nfunction Note(props) {\n  const [editclicked, seteditclicked] = useState(false);\n  const [editedNote, setEditedNote] = useState({\n      Edtitle:props.NoteTitle,\n      Edcontent:props.NoteMessage\n  });\n  function editNote(newEnote, EditId) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ ...newEnote,id:EditId }),\n    };\n    fetch(\"http://localhost:4000/editnote\", requestOptions)\n    .then((res) =>res.json())\n    .then((jsondata) => {\n      setEditedNote((prev)=>{\n        return({\n          ...prev,\n          Edtitle:newEnote.title,\n          Edcontent:newEnote.content\n        });\n      });\n      seteditclicked(false);\n    });\n  }\n  return (\n    <div className=\"note\">\n      {editclicked ? (\n        <Editnote\n          Etitle={editedNote.Edtitle}\n          Econtent={editedNote.Edcontent}\n          Eid={props.id}\n          edit={editNote}\n        />\n      ) : (\n        <div>\n          <h1>{editedNote.Edtitle}</h1>\n          <p>{editedNote.Edcontent}</p>\n          <button\n            onClick={() => {\n              props.del(props.id);\n            }}\n          >\n            <Delete />\n          </button>\n          <button\n            onClick={() => {\n              seteditclicked(true);\n              console.log(\"clicked\");\n            }}\n          >\n            <EditIcon />\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Note;\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p> Copyright Â© {year}</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { Fab,Zoom } from '@material-ui/core';\n\nfunction CreateArea(props) {\n  var [ipnote, setipnote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  var [taclick,settaclick] = useState(false);\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setipnote((prev) => {\n      return {\n        ...prev,\n        [name]: value,\n      };\n    });\n  }\n  function Add(e) {\n    props.add(ipnote);\n    setipnote({\n      title: \"\",\n      content: \"\"\n    });\n    e.preventDefault();\n  }\n\n  function handleClick(){\n    settaclick(true);\n  }\n  return (\n    <div >\n      <form className=\"create-note\" action=\"../../note\" method=\"POST\">\n        {taclick && <input\n          onChange={handleChange}\n          name=\"title\"\n          value={ipnote.title}\n          placeholder=\"Title\"\n        />}\n        <textarea\n          onClick={handleClick}\n          onChange={handleChange}\n          name=\"content\"\n          value={ipnote.content}\n          placeholder=\"Take a note...\"\n          rows={taclick ? \"3\":\"1\"}\n        />\n        <Zoom in={taclick ? true:false}>\n        <Fab onClick={Add}>\n        <AddIcon />\n        </Fab>\n        </Zoom>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n","import React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport Note from \"./Note\";\nimport Footer from \"./Footer\";\nimport CreateArea from \"./CreateArea\";\n\nfunction App() {\n  var [notes, setnotes] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:4000/\")\n      .then((res) => res.json())\n      .then((jsondata) => setnotes(jsondata))\n      .catch((error) => {\n        console.log(error);\n      });\n  },[]);\n  function addNote(newNote) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newNote),\n    };\n    fetch(\"http://localhost:4000/addnote\", requestOptions)\n      .then((res) => res.json())\n      .then((jsondata) => setnotes(jsondata));\n  }\n  function deleteNote(id) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ id }),\n    };\n    fetch(\"http://localhost:4000/deletenote\", requestOptions)\n      .then((res) => res.json())\n      .then((jsondata) => setnotes(jsondata));\n  }\n  \n  return (\n    <div>\n      <Header />\n      <CreateArea add={addNote} />\n      {notes.map((i, index) => {\n        return (\n          <Note\n            key={i.Ntitle+index}\n            id={i._id}\n            NoteTitle={i.Ntitle}\n            NoteMessage={i.Ncontent}\n            del={deleteNote}\n          />\n        );\n      })}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\"\n\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}